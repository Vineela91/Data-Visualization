# -*- coding: utf-8 -*-
"""sa_polarity.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VoLVKL4-q9Z4qC0Zat0RIXlcD14OR54h
"""

import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

#df=pd.read_csv('leicester_city_twitter_data_5k.csv')
#df=pd.read_csv('leicester_city_twitter_data_10k.csv')
df=pd.read_csv('leicester_city_twitter_data_20k.csv')
df.head()

df.drop(['Unnamed: 0','Date_time','Tweet_id','User_name'],axis=1,inplace=True)

df.head()

!pip3 install --upgrade vaderSentiment

import nltk
nltk.download(['stopwords'])#(['punkt','stopwords'])
from nltk.corpus import stopwords
stopwords = stopwords.words('english')

from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
analyzer = SentimentIntensityAnalyzer()

df.isnull().sum()

df['tweet_cleaned'] = df['Tweet_text'].apply(lambda x: ' '.join([item for item in x.split() if item not in stopwords]))

df.sample(6)

df['Sentiment_score'] = df['tweet_cleaned'].apply(lambda x: analyzer.polarity_scores(x)['compound'])

df.head()

df.sample(5)

def sentiment_class(sent_score):
  if sent_score>=0.05:
    sent_class=int(1)
  elif -0.05<sent_score<0.05:
    sent_class=int(0)
  else:
    sent_class=int(-1)
  
  return(sent_class)

df['Sentiment_class']= df['Sentiment_score'].apply(sentiment_class)

df.head()

df.sample(6)